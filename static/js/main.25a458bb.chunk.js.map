{"version":3,"sources":["components/images/Categories.jpg","components/images/GPS.jpg","configFirebase.ts","redux/actions.ts","components/header.tsx","components/MUIComponents.tsx","components/FormSteps/Welcome.tsx","components/FormSteps/Branding.tsx","components/googleMap.tsx","components/FormSteps/Info.tsx","components/FormSteps/Features.tsx","components/FormSteps/Preview.tsx","components/modalForm.tsx","components/dashboard.tsx","redux/actionTypes.ts","redux/reducers.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACR_APP_MESSAGING_SENDER_ID","appId","firebase","persistance","Auth","Persistence","LOCAL","authProvider","GoogleAuthProvider","databaseRef","ref","authRef","appsRef","child","toggleModal","modalOpen","type","payload","setEditing","isEditing","appItem","setValues","values","initial","Header","props","handleLogout","signOut","then","localStorage","clear","closeAnchorEl","console","log","monitorAuth","onAuthStateChanged","user","uid","on","snapshot","appsSnaphot","val","appsArr","item","push","id","appName","appColor","appImage","appDescription","appLocation","appCategories","appGPS","getUser","handleLogin","setPersistence","signInWithPopup","setState","anchorEl","setAnchorEl","event","currentTarget","state","this","isLogged","AppBar","color","position","Toolbar","Button","className","aria-controls","aria-haspopup","onClick","Avatar","src","currentUser","photoURL","Menu","keepMounted","open","Boolean","onClose","MenuItem","displayName","React","Component","mapsDispatchToProps","apps","connect","main","MUITextField","label","name","input","TextField","ImageUpload","initImage","handleChange","files","length","formData","FormData","append","axios","method","url","responseType","headers","Authorization","data","res","onChange","link","Alert","success","warning","image","initialFiles","showAlerts","showPreviewsInDropzone","showPreviews","acceptedFiles","filesLimit","ColorPicker","handleColorChange","hex","disableAlpha","value","TextArea","fullWidth","multiline","rows","variant","Switcher","checked","Switch","Welcome","handleSubmit","onSubmit","Typography","style","marginBottom","Field","component","marginTop","reduxForm","form","forceUnregisterOnUnmount","destroyOnUnmount","Branding","Grid","spacing","container","xs","xl","lg","md","selector","formValueSelector","BrandingForm","MapGoogle","onSearchBoxMounted","createRef","onPlacesChanged","places","current","getPlaces","lat","geometry","location","lng","address","formatted_address","undefined","width","placeholder","defaultZoom","center","defaultCenter","compose","withProps","googleMapURL","loadingElement","height","containerElement","mapElement","withScriptjs","withGoogleMap","Info","InfoForm","Features","padding","Card","CardContent","textAlign","categoriesImage","alt","gpsImage","Preview","prevData","appID","userID","key","newData","error","JSON","stringify","set","TableContainer","Paper","Table","TableBody","TableRow","TableCell","scope","align","maxHeight","display","alignItems","justifyContent","backgroundColor","marginLeft","maxWidth","overflow","textOverflow","PreviewForm","ModalForm","handleNext","keys","Object","stepMap","prevState","activeStep","indexOf","activeStepComponent","Modal","Container","top","right","minWidth","Stepper","map","Step","StepLabel","Dashboard","editApp","deleteApp","window","confirm","remove","fixed","index","elevation","margin","minHeight","Fab","bottom","aria-label","actionTypes","formReducer","reduxFormReducer","plugin","addAppForm","action","initialState","reducer","combineReducers","middleware","applyMiddleware","thunk","logger","store","createStore","App","stack","limit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25a458bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Categories.c8ef0ae5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GPS.205a7820.jpg\";","import * as firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nexport const config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACR_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID\r\n};\r\nfirebase.initializeApp(config);\r\nexport const persistance = firebase.auth.Auth.Persistence.LOCAL;\r\nexport const authProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const databaseRef = firebase.database().ref();\r\nexport const authRef = firebase.auth();\r\nexport const appsRef = databaseRef.child(\"apps\");\r\n","const toggleModal = (modalOpen: boolean) => {\n  return {\n    type: \"toggleModal\",\n    payload: { modalOpen: modalOpen }\n  };\n};\nconst getUser = (isLogged: boolean, currentUser: any, apps: any) => {\n  return {\n    type: \"getUser\",\n    payload: { isLogged: isLogged, currentUser: currentUser, apps: apps }\n  };\n};\nconst setEditing = (isEditing: boolean, appItem: any) => {\n  return {\n    type: \"setEditing\",\n    payload: { isEditing: isEditing, appItem: appItem }\n  };\n};\nconst setValues = (values: any, initial: any) => {\n  return {\n    type: \"setValues\",\n    payload: { values: values, initial: initial }\n  };\n};\nexport { toggleModal, getUser, setEditing, setValues };\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { authRef, appsRef, authProvider, persistance } from \"../configFirebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from \"../redux/actions\";\r\ninterface IProps {\r\n  isLogged: boolean;\r\n  currentUser: firebase.User;\r\n  getUser: Function;\r\n}\r\ninterface IHeaderState {\r\n  anchorEl: HTMLButtonElement;\r\n}\r\nclass Header extends React.Component<IProps, IHeaderState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null\r\n    };\r\n  }\r\n  handleLogout = () => {\r\n    authRef.signOut().then(() => {\r\n      localStorage.clear();\r\n      this.closeAnchorEl();\r\n      console.log(\"Logged out...\");\r\n    });\r\n  };\r\n  monitorAuth = () => {\r\n    return authRef.onAuthStateChanged((user: firebase.User) => {\r\n      if (user) {\r\n        appsRef\r\n          .child(user.uid)\r\n          .on(\"value\", (snapshot: firebase.database.DataSnapshot) => {\r\n            let appsSnaphot = snapshot.val();\r\n            let appsArr = [];\r\n            for (let item in appsSnaphot) {\r\n              appsArr.push({\r\n                id: item,\r\n                appName: appsSnaphot[item].appName,\r\n                appColor: appsSnaphot[item].appColor,\r\n                appImage: appsSnaphot[item].appImage,\r\n                appDescription: appsSnaphot[item].appDescription,\r\n                appLocation: appsSnaphot[item].appLocation,\r\n                appCategories: appsSnaphot[item].appCategories,\r\n                appGPS: appsSnaphot[item].appGPS\r\n              });\r\n            }\r\n            this.props.getUser(true, user, appsArr);\r\n          });\r\n      } else {\r\n        this.props.getUser(false, null, []);\r\n      }\r\n    });\r\n  };\r\n  handleLogin = () => {\r\n    authRef.setPersistence(persistance).then(() => {\r\n      authRef.signInWithPopup(authProvider);\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.monitorAuth();\r\n  }\r\n  closeAnchorEl = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  setAnchorEl = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n  render() {\r\n    if (this.props.isLogged) {\r\n      return (\r\n        <AppBar color=\"primary\" position=\"static\">\r\n          <Toolbar>\r\n            <Button\r\n              className=\"avatarBtn\"\r\n              aria-controls=\"logout-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={this.setAnchorEl}\r\n            >\r\n              <Avatar src={this.props.currentUser.photoURL} />\r\n            </Button>\r\n\r\n            <Menu\r\n              id=\"logout-menu\"\r\n              anchorEl={this.state.anchorEl}\r\n              keepMounted\r\n              open={Boolean(this.state.anchorEl)}\r\n              onClose={this.closeAnchorEl}\r\n            >\r\n              <MenuItem>{this.props.currentUser.displayName}</MenuItem>\r\n              <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n          </Toolbar>\r\n        </AppBar>\r\n      );\r\n    } else {\r\n      return (\r\n        <AppBar color=\"primary\" position=\"static\">\r\n          <Toolbar>\r\n            <Button onClick={this.handleLogin} color=\"inherit\">\r\n              Login\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapsDispatchToProps = {\r\n  getUser\r\n};\r\nexport const mapsStateToProps = (state: any) => {\r\n  return {\r\n    isLogged: state.main.isLogged,\r\n    currentUser: state.main.currentUser\r\n  };\r\n};\r\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Header);\r\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { ChromePicker, ColorResult } from \"react-color\";\nimport axios, { AxiosResponse } from \"axios\";\nimport Alert from \"react-s-alert\";\n\nexport const MUITextField = ({ label, name, input }: any) => (\n  <TextField name={name} label={label} {...input} />\n);\ninterface IImageUploaderProps {\n  input: any;\n  label: string;\n  name: string;\n  image: string;\n}\nexport class ImageUpload extends React.Component<IImageUploaderProps> {\n  public initImage: string[] = [];\n  handleChange = (files: File[]) => {\n    if (files.length === 1) {\n      let formData = new FormData();\n      formData.append(\"image\", files[0]);\n      var apiUrl = \"https://api.imgur.com/3/image\";\n      var apiKey = \"7f2973d0c528ca1\";\n      axios({\n        method: \"post\",\n        url: apiUrl,\n        responseType: \"json\",\n        headers: {\n          Authorization: \"Client-ID \" + apiKey\n        },\n        data: formData\n      }).then((res: AxiosResponse) => {\n        this.props.input.onChange(res.data.data.link);\n        Alert.success(\"Image added\", {\n          position: \"bottom-left\"\n        });\n      });\n    } else {\n      this.props.input.onChange(\"\");\n      Alert.warning(\"Image deleted\", {\n        position: \"bottom-left\"\n      });\n    }\n  };\n  componentWillMount() {\n    if (this.props.image) {\n      this.initImage.push(this.props.image);\n    }\n  }\n  render() {\n    return (\n      <DropzoneArea\n        initialFiles={this.initImage}\n        showAlerts={false}\n        onChange={this.handleChange}\n        showPreviewsInDropzone={false}\n        showPreviews={true}\n        acceptedFiles={[\"image/*\"]}\n        filesLimit={1}\n      />\n    );\n  }\n}\ninterface IColorPickerProps {\n  input: any;\n  label: string;\n  name: string;\n  color: string;\n}\nexport class ColorPicker extends React.Component<IColorPickerProps> {\n  handleColorChange = (color: ColorResult) => {\n    this.props.input.onChange(color.hex);\n  };\n  render() {\n    return (\n      <div>\n        <ChromePicker\n          disableAlpha={true}\n          color={this.props.input.value}\n          onChange={this.handleColorChange}\n        />\n      </div>\n    );\n  }\n}\nexport const TextArea = ({ input, name }: any) => {\n  return (\n    <TextField\n      name={name}\n      {...input}\n      fullWidth\n      multiline\n      rows=\"13\"\n      variant=\"outlined\"\n    />\n  );\n};\ninterface ISwitcherProps {\n  input: any;\n}\nexport class Switcher extends React.Component<ISwitcherProps> {\n  componentDidMount() {\n    this.props.input.onChange(this.props.input.checked);\n  }\n  render() {\n    return (\n      <Switch\n        color=\"primary\"\n        checked={this.props.input.checked}\n        onChange={this.props.input.onChange}\n      ></Switch>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { InjectedFormProps, reduxForm, Field } from \"redux-form\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport { MUITextField } from \"../MUIComponents\";\r\nimport { connect } from \"react-redux\";\r\ninterface IWelcomeProps {\r\n  appName: string;\r\n}\r\ninterface IProps {\r\n  isEditing: boolean;\r\n}\r\nclass Welcome extends React.Component<\r\n  InjectedFormProps<IWelcomeProps> & IProps\r\n> {\r\n  render() {\r\n    const { handleSubmit, isEditing } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Typography style={{ marginBottom: \"20px\" }} variant=\"h5\">\r\n          {isEditing\r\n            ? \"Edit your app name\"\r\n            : \"Welcome! Let us help you get started\"}\r\n        </Typography>\r\n        <Field\r\n          name=\"appName\"\r\n          label=\"App Name\"\r\n          component={MUITextField}\r\n          type=\"text\"\r\n        />\r\n\r\n        <Typography variant=\"subtitle1\">\r\n          {isEditing\r\n            ? \"\"\r\n            : \"Remember. You can always change your options in our App configuration screens\"}\r\n        </Typography>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ marginTop: \"20px\" }}\r\n        >\r\n          Next\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport const mapsStateToProps = (state: any) => {\r\n  return {\r\n    isEditing: state.main.isEditing\r\n  };\r\n};\r\nexport default connect(mapsStateToProps)(\r\n  reduxForm<IWelcomeProps>({\r\n    form: \"addAppForm\",\r\n    forceUnregisterOnUnmount: false,\r\n    destroyOnUnmount: false\r\n  })(Welcome)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  InjectedFormProps,\r\n  reduxForm,\r\n  Field,\r\n  formValueSelector\r\n} from \"redux-form\";\r\nimport { Typography, Button, Grid } from \"@material-ui/core\";\r\nimport { ImageUpload, ColorPicker } from \"../MUIComponents\";\r\nimport { connect } from \"react-redux\";\r\ninterface IBrandingProps {\r\n  appColor: string;\r\n  appImage: string;\r\n}\r\nclass Branding extends React.Component<\r\n  InjectedFormProps<IBrandingProps> & IBrandingProps\r\n> {\r\n  render() {\r\n    const { handleSubmit, appColor, appImage } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid spacing={3} container>\r\n          <Grid item xs={12} xl={6} lg={6} md={6}>\r\n            <Typography style={{ marginBottom: \"20px\" }} variant=\"h5\">\r\n              Upload Your App Image\r\n            </Typography>\r\n            <Field\r\n              name=\"appImage\"\r\n              label=\"App Image\"\r\n              image={appImage}\r\n              component={ImageUpload}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} xl={6} lg={6} md={6}>\r\n            <Typography style={{ marginBottom: \"20px\" }} variant=\"h5\">\r\n              Choose Your Accent Color\r\n            </Typography>\r\n            <Field\r\n              name=\"appColor\"\r\n              label=\"Accent Color\"\r\n              color={appColor}\r\n              component={ColorPicker}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          style={{ marginTop: \"20px\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nvar selector = formValueSelector(\"addAppForm\");\r\nvar BrandingForm = reduxForm<IBrandingProps>({\r\n  form: \"addAppForm\",\r\n  forceUnregisterOnUnmount: false,\r\n  destroyOnUnmount: false\r\n})(Branding);\r\nexport default connect(state => {\r\n  const { appColor, appImage } = selector(state, \"appColor\", \"appImage\");\r\n  return {\r\n    appColor,\r\n    appImage\r\n  };\r\n})(BrandingForm);\r\n","import React from \"react\";\nimport {\n  GoogleMap,\n  withGoogleMap,\n  withScriptjs,\n  Marker\n} from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\nimport { TextField } from \"@material-ui/core\";\nimport StandaloneSearchBox from \"react-google-maps/lib/components/places/StandaloneSearchBox\";\ninterface IMapState {\n  lat: number;\n  lng: number;\n  address: string;\n}\ninterface IMapProps {\n  input: any;\n  label: string;\n  name: string;\n  location: object;\n}\nclass MapGoogle extends React.Component<IMapProps, IMapState> {\n  private onSearchBoxMounted = React.createRef<any>();\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      lat: 49.83968300000001,\n      lng: 24.02971699999999,\n      address: \"Lviv\"\n    };\n  }\n  componentDidMount() {\n    if (this.props.location !== undefined) {\n      this.setState(this.props.location);\n      this.props.input.onChange(this.props.location);\n    } else {\n      this.props.input.onChange(this.state);\n    }\n  }\n  onPlacesChanged = () => {\n    const places = this.onSearchBoxMounted.current.getPlaces();\n    this.setState({\n      lat: places[0].geometry.location.lat(),\n      lng: places[0].geometry.location.lng(),\n      address: places[0].formatted_address\n    });\n    this.props.input.onChange(this.state);\n  };\n  render() {\n    return (\n      <div>\n        <StandaloneSearchBox\n          {...this.props.input}\n          ref={this.onSearchBoxMounted}\n          onPlacesChanged={this.onPlacesChanged}\n        >\n          <TextField\n            className=\"placesSearchBox\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Search your location...\"\n          />\n        </StandaloneSearchBox>\n        <GoogleMap\n          defaultZoom={10}\n          center={{ lng: this.state.lng, lat: this.state.lat }}\n          defaultCenter={{ lng: this.state.lng, lat: this.state.lat }}\n        >\n          <Marker position={{ lng: this.state.lng, lat: this.state.lat }} />\n        </GoogleMap>\n      </div>\n    );\n  }\n}\nexport default compose(\n  withProps({\n    googleMapURL: process.env.REACT_APP_GOOGLE_API_URL,\n    loadingElement: (\n      <div className=\"loadingElement\" style={{ height: `100%` }} />\n    ),\n    containerElement: (\n      <div className=\"mapContainer\" style={{ height: `100%` }} />\n    ),\n    mapElement: <div className=\"mapElement\" style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(MapGoogle);\n","import React from \"react\";\r\nimport {\r\n  InjectedFormProps,\r\n  reduxForm,\r\n  Field,\r\n  formValueSelector\r\n} from \"redux-form\";\r\nimport { Typography, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextArea } from \"../MUIComponents\";\r\nimport MapGoogle from \"../googleMap\";\r\nimport { AppLocation } from \"../../App\";\r\ninterface IInfoProps {\r\n  appDescription: string;\r\n  appLocation: AppLocation;\r\n}\r\nclass Info extends React.Component<InjectedFormProps<IInfoProps> & IInfoProps> {\r\n  render() {\r\n    const { handleSubmit, appLocation } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid spacing={3} container>\r\n          <Grid item xs={12} xl={6} lg={6} md={6}>\r\n            <Typography style={{ marginBottom: \"20px\" }} variant=\"h5\">\r\n              Add your description\r\n            </Typography>\r\n            <Field\r\n              name=\"appDescription\"\r\n              label=\"App Description\"\r\n              component={TextArea}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} xl={6} lg={6} md={6}>\r\n            <Typography style={{ marginBottom: \"20px\" }} variant=\"h5\">\r\n              Enter your app location\r\n            </Typography>\r\n\r\n            <Field\r\n              location={appLocation}\r\n              name=\"appLocation\"\r\n              label=\"App Location\"\r\n              component={MapGoogle}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          style={{ marginTop: \"20px\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nvar selector = formValueSelector(\"addAppForm\");\r\nvar InfoForm = reduxForm<IInfoProps>({\r\n  form: \"addAppForm\",\r\n  forceUnregisterOnUnmount: false,\r\n  destroyOnUnmount: false\r\n})(Info);\r\nexport default connect(state => {\r\n  const appLocation = selector(state, \"appLocation\");\r\n  return {\r\n    appLocation\r\n  };\r\n})(InfoForm);\r\n","import React from \"react\";\r\nimport { InjectedFormProps, reduxForm, Field } from \"redux-form\";\r\nimport { Typography, Button, Grid } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Switcher } from \"../MUIComponents\";\r\nimport categoriesImage from \"../images/Categories.jpg\";\r\nimport gpsImage from \"../images/GPS.jpg\";\r\ninterface IFeaturesProps {\r\n  appCategories: boolean;\r\n  appGPS: boolean;\r\n}\r\nclass Features extends React.Component<\r\n  InjectedFormProps<IFeaturesProps> & IFeaturesProps\r\n> {\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid spacing={3} container>\r\n          <Typography style={{ padding: \"12px\" }} variant=\"h5\">\r\n            Turn on the feature you want to include in your app.{\" \"}\r\n          </Typography>\r\n          <Grid item xs={12} xl={6} lg={6} md={6}>\r\n            <Card>\r\n              <CardContent style={{ textAlign: \"center\" }}>\r\n                <div className=\"thumbnail\">\r\n                  <img src={categoriesImage} alt=\"Categories\"></img>\r\n                </div>\r\n                <Typography variant=\"h6\"> Categories</Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Include more than one list or categories\r\n                </Typography>\r\n                <Field\r\n                  type=\"checkbox\"\r\n                  checked=\"false\"\r\n                  name=\"appCategories\"\r\n                  component={Switcher}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} xl={6} lg={6} md={6}>\r\n            <Card>\r\n              <CardContent style={{ textAlign: \"center\" }}>\r\n                <div className=\"thumbnail\">\r\n                  <img src={gpsImage} alt=\"GPS Map\"></img>\r\n                </div>\r\n                <Typography variant=\"h6\"> GPS Map</Typography>\r\n                <Typography variant=\"subtitle1\">Include a GPS map</Typography>\r\n                <Field\r\n                  type=\"checkbox\"\r\n                  checked=\"false\"\r\n                  name=\"appGPS\"\r\n                  component={Switcher}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          style={{ marginTop: \"20px\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default reduxForm<IFeaturesProps>({\r\n  form: \"addAppForm\",\r\n  forceUnregisterOnUnmount: false,\r\n  destroyOnUnmount: false\r\n})(Features);\r\n","import React from \"react\";\r\nimport { reduxForm, formValueSelector, InjectedFormProps } from \"redux-form\";\r\nimport { Typography, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal, setEditing, setValues } from \"../../redux/actions\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { databaseRef } from \"../../configFirebase\";\r\nimport Alert from \"react-s-alert\";\r\nimport { AppItem } from \"../../App\";\r\ninterface IProps {\r\n  currentUser: firebase.User;\r\n  toggleModal: Function;\r\n  isEditing: boolean;\r\n  setEditing: Function;\r\n  appItem?: AppItem;\r\n  setValues: Function;\r\n}\r\nclass Preview extends React.Component<\r\n  InjectedFormProps<{}, IProps & AppItem> & IProps & AppItem\r\n> {\r\n  handleSubmit = () => {\r\n    let prevData = this.props.appItem;\r\n    let appID = this.props.appItem.id;\r\n    let userID = this.props.currentUser.uid;\r\n    delete prevData.id;\r\n    const newData: AppItem = {\r\n      appName: this.props.appName,\r\n      appColor: this.props.appColor,\r\n      appImage: this.props.appImage,\r\n      appDescription: this.props.appDescription,\r\n      appLocation: this.props.appLocation,\r\n      appCategories: this.props.appCategories,\r\n      appGPS: this.props.appGPS\r\n    };\r\n    let key: keyof AppItem;\r\n    for (key in newData) {\r\n      if (newData[key] === \"\") {\r\n        Alert.error(\"All fields required!\", {\r\n          position: \"bottom-left\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (newData.appName.length > 16) {\r\n      Alert.error(\"App name must be <15\", {\r\n        position: \"bottom-left\"\r\n      });\r\n      return;\r\n    }\r\n    if (JSON.stringify(prevData) === JSON.stringify(newData)) {\r\n      Alert.warning(\"No changes were made\", {\r\n        position: \"bottom-left\"\r\n      });\r\n      return;\r\n    }\r\n    if (this.props.isEditing) {\r\n      databaseRef.child(`apps/${userID}/${appID}`).set(newData, () => {\r\n        this.props.setEditing(false, {});\r\n        Alert.success(\"App updated!\", {\r\n          position: \"bottom-left\"\r\n        });\r\n      });\r\n    } else {\r\n      databaseRef\r\n        .child(`apps/${this.props.currentUser[\"uid\"]}`)\r\n        .push(newData, () => {\r\n          Alert.success(\"App added!\", {\r\n            position: \"bottom-left\"\r\n          });\r\n        });\r\n    }\r\n    this.props.toggleModal(false);\r\n    this.props.setValues({}, {});\r\n  };\r\n  render() {\r\n    const {\r\n      appName,\r\n      appColor,\r\n      appImage,\r\n      appDescription,\r\n      appLocation,\r\n      appCategories,\r\n      appGPS\r\n    } = this.props;\r\n    return (\r\n      <form>\r\n        <Grid spacing={3} container>\r\n          <Typography style={{ padding: \"12px\" }} variant=\"h5\">\r\n            Preview{\" \"}\r\n          </Typography>\r\n          <Grid item xs={12} xl={12} lg={12} md={12}>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      App name\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{appName}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      App image\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <img\r\n                        alt=\"Preview app\"\r\n                        style={{ maxHeight: \"50px\" }}\r\n                        src={appImage}\r\n                      ></img>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      Accent Color\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {appColor}{\" \"}\r\n                        <div\r\n                          style={{\r\n                            backgroundColor: appColor,\r\n                            marginLeft: \"10px\",\r\n                            width: \"50px\",\r\n                            height: \"30px\",\r\n                            display: \"inline-block\"\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      App description\r\n                    </TableCell>\r\n                    <TableCell\r\n                      style={{\r\n                        maxWidth: \"200px\",\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\"\r\n                      }}\r\n                      align=\"right\"\r\n                    >\r\n                      {appDescription}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      App location\r\n                    </TableCell>\r\n                    <TableCell\r\n                      style={{\r\n                        maxWidth: \"200px\",\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\"\r\n                      }}\r\n                      align=\"right\"\r\n                    >\r\n                      {appLocation === undefined ? \"\" : appLocation.address}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      More than one list or categories\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {appCategories ? \"Enabled\" : \"Disabled\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      GPS Map\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {appGPS ? \"Enabled\" : \"Disabled\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          style={{ marginTop: \"20px\" }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.handleSubmit}\r\n        >\r\n          Finish\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapsDispatchToProps = {\r\n  toggleModal,\r\n  setEditing,\r\n  setValues\r\n};\r\nconst mapsStateToProps = (state: any) => {\r\n  const currentUser = state.main.currentUser;\r\n  const isEditing = state.main.isEditing;\r\n  const appItem = state.main.appItem;\r\n  const {\r\n    appName,\r\n    appImage,\r\n    appColor,\r\n    appDescription,\r\n    appLocation,\r\n    appCategories,\r\n    appGPS\r\n  } = selector(\r\n    state,\r\n    \"appName\",\r\n    \"appImage\",\r\n    \"appColor\",\r\n    \"appDescription\",\r\n    \"appLocation\",\r\n    \"appCategories\",\r\n    \"appGPS\"\r\n  );\r\n  return {\r\n    appName,\r\n    appImage,\r\n    appColor,\r\n    appDescription,\r\n    appLocation,\r\n    appCategories,\r\n    appGPS,\r\n    currentUser,\r\n    isEditing,\r\n    appItem\r\n  };\r\n};\r\nlet selector = formValueSelector(\"addAppForm\");\r\n\r\nconst PreviewForm = reduxForm({\r\n  form: \"addAppForm\",\r\n  forceUnregisterOnUnmount: false,\r\n  destroyOnUnmount: false\r\n})(Preview);\r\n\r\nexport default connect(mapsStateToProps, mapsDispatchToProps)(PreviewForm);\r\n","import React from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Stepper, Container, Paper } from \"@material-ui/core\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Welcome from \"./FormSteps/Welcome\";\r\nimport Branding from \"./FormSteps/Branding\";\r\nimport Info from \"./FormSteps/Info\";\r\nimport Features from \"./FormSteps/Features\";\r\nimport Preview from \"./FormSteps/Preview\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal, setEditing, setValues } from \"../redux/actions\";\r\ninterface IModalState {\r\n  activeStep: string;\r\n}\r\ninterface StepMap {\r\n  Welcome: object;\r\n  Branding: object;\r\n  Info: object;\r\n  Features: object;\r\n  Preview: object;\r\n}\r\ninterface IProps {\r\n  modalOpen: boolean;\r\n  toggleModal: Function;\r\n  isEditing: boolean;\r\n  setEditing: Function;\r\n  setValues: Function;\r\n}\r\nclass ModalForm extends React.Component<IProps, IModalState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: \"Welcome\"\r\n    };\r\n  }\r\n\r\n  handleNext = () => {\r\n    const keys = Object.keys(this.stepMap);\r\n    this.setState(prevState => {\r\n      return {\r\n        activeStep: keys[keys.indexOf(prevState.activeStep) + 1]\r\n      };\r\n    });\r\n  };\r\n  stepMap: StepMap = {\r\n    Welcome: <Welcome onSubmit={this.handleNext} />,\r\n    Branding: <Branding onSubmit={this.handleNext} />,\r\n    Info: <Info onSubmit={this.handleNext} />,\r\n    Features: <Features onSubmit={this.handleNext} />,\r\n    Preview: <Preview />\r\n  };\r\n  render() {\r\n    const activeStepComponent = this.stepMap[\r\n      this.state.activeStep as keyof StepMap\r\n    ];\r\n    return (\r\n      <Modal open={this.props.modalOpen}>\r\n        <Container className=\"modal-container\" maxWidth=\"md\">\r\n          <Paper className=\"modal-paper\">\r\n            <Button\r\n              onClick={() => {\r\n                if (this.props.isEditing) {\r\n                  this.props.setValues({}, {});\r\n                  this.props.setEditing(false, {});\r\n                }\r\n                this.props.toggleModal(false);\r\n              }}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"10px\",\r\n                right: \"10px\",\r\n                minWidth: \"auto\"\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </Button>\r\n            <Stepper\r\n              style={{ marginBottom: \"30px\" }}\r\n              activeStep={Object.keys(this.stepMap).indexOf(\r\n                this.state.activeStep\r\n              )}\r\n            >\r\n              {Object.keys(this.stepMap).map(label => (\r\n                <Step\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      activeStep: label\r\n                    });\r\n                  }}\r\n                  key={label}\r\n                >\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            {activeStepComponent}\r\n          </Paper>\r\n        </Container>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nconst mapsDispatchToProps = {\r\n  toggleModal,\r\n  setEditing,\r\n  setValues\r\n};\r\nconst mapsStateToProps = (state: any) => {\r\n  return {\r\n    modalOpen: state.main.modalOpen,\r\n    isEditing: state.main.isEditing\r\n  };\r\n};\r\nexport default connect(mapsStateToProps, mapsDispatchToProps)(ModalForm);\r\n","import React from \"react\";\r\nimport { Typography, Fab, Paper, Grid, Button } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport ModalForm from \"./modalForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal, setEditing, setValues } from \"../redux/actions\";\r\nimport Alert from \"react-s-alert\";\r\nimport { databaseRef } from \"../configFirebase\";\r\nimport { AppItem } from \"../App\";\r\n\r\ninterface IProps {\r\n  isLogged: boolean;\r\n  currentUser: firebase.User;\r\n  modalOpen: boolean;\r\n  toggleModal: Function;\r\n  apps: Object[];\r\n  setEditing: Function;\r\n  appItem?: AppItem;\r\n  setValues: Function;\r\n}\r\nclass Dashboard extends React.Component<IProps> {\r\n  editApp = (appItem: any) => {\r\n    this.props.setEditing(true, appItem);\r\n    this.props.toggleModal(true);\r\n    this.props.setValues(appItem, appItem);\r\n  };\r\n  deleteApp = (appItem: any) => {\r\n    if (window.confirm(\"Delete this app?\")) {\r\n      let appID = appItem.id;\r\n      let userID = this.props.currentUser.uid;\r\n      databaseRef.child(`apps/${userID}/${appID}`).remove(() => {\r\n        Alert.success(\"App deleted!\", {\r\n          position: \"bottom-left\"\r\n        });\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    if (this.props.isLogged) {\r\n      return (\r\n        <Container className=\"dashboard\" fixed>\r\n          <div style={{ marginBottom: \"20px\" }} className=\"dashboard-header\">\r\n            <Typography variant=\"h6\">My Dashboard</Typography>\r\n          </div>\r\n          <div className=\"dashboard-body\">\r\n            {this.props.apps.length <= 0 ? (\r\n              <Typography variant=\"h5\">You have no apps yet</Typography>\r\n            ) : (\r\n              this.props.apps.map((appItem: any, index: number) => {\r\n                return (\r\n                  <div key={`item-${index}`}>\r\n                    {\" \"}\r\n                    <Paper\r\n                      elevation={3}\r\n                      style={{ padding: \"15px\", margin: \"20px 0\" }}\r\n                    >\r\n                      <Grid style={{ alignItems: \"center\" }} container>\r\n                        <Grid item xs={5}>\r\n                          <div className=\"thumbnail-app\">\r\n                            <img src={appItem.appImage} alt={appItem.appName} />\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid style={{ padding: \"0 20px\" }} item xs={4}>\r\n                          <Typography variant=\"h6\">\r\n                            {appItem.appName}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                          <Button\r\n                            onClick={() => {\r\n                              this.editApp(appItem);\r\n                            }}\r\n                            style={{\r\n                              width: \"100%\",\r\n                              marginBottom: \"5px\",\r\n                              minHeight: \"60px\"\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Edit app\r\n                            <EditSharpIcon style={{ marginLeft: \"10px\" }} />\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              this.deleteApp(appItem);\r\n                            }}\r\n                            style={{\r\n                              width: \"100%\",\r\n                              marginTop: \"5px\",\r\n                              minHeight: \"60px\"\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                          >\r\n                            Delete app\r\n                            <DeleteSharpIcon style={{ marginLeft: \"10px\" }} />\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </div>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n          <Fab\r\n            style={{\r\n              position: \"fixed\",\r\n              bottom: \"20px\",\r\n              right: \"20px\"\r\n            }}\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.props.toggleModal(true);\r\n            }}\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          {this.props.modalOpen === true ? <ModalForm /> : \"\"}\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container className=\"dashboard\" fixed>\r\n          <div style={{ marginBottom: \"20px\" }} className=\"dashboard-header\">\r\n            <Typography variant=\"h2\">Please, sign in...</Typography>\r\n          </div>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapsDispatchToProps = {\r\n  toggleModal,\r\n  setEditing,\r\n  setValues\r\n};\r\nconst mapsStateToProps = (state: any) => {\r\n  return {\r\n    isLogged: state.main.isLogged,\r\n    currentUser: state.main.currentUser,\r\n    modalOpen: state.main.modalOpen,\r\n    apps: state.main.apps,\r\n    appItem: state.main.appItem\r\n  };\r\n};\r\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Dashboard);\r\n","export const actionTypes = {\n  GET_USER: \"getUser\",\n  TOGGLE_MODAL: \"toggleModal\",\n  SET_EDITING: \"setEditing\",\n  SET_VALUES: \"setValues\"\n};\n","import { AppItem } from \"../App\";\nimport { reducer as reduxFormReducer } from \"redux-form\";\nimport { actionTypes } from \"./actionTypes\";\nexport const formReducer = reduxFormReducer.plugin({\n  addAppForm: (state: any, action: any) => {\n    switch (action.type) {\n      case actionTypes.SET_VALUES:\n        return {\n          ...state,\n          values: action.payload.values,\n          initial: action.payload.initial\n        };\n      default:\n        return state;\n    }\n  }\n});\nconst initialState = {\n  isLogged: false,\n  currentUser: {},\n  modalOpen: false,\n  apps: [] as AppItem[],\n  isEditing: false,\n  appItem: {}\n};\n\nexport const mainReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case actionTypes.GET_USER:\n      return {\n        ...state,\n        isLogged: action.payload.isLogged,\n        currentUser: action.payload.currentUser,\n        apps: action.payload.apps\n      };\n    case actionTypes.TOGGLE_MODAL:\n      return {\n        ...state,\n        modalOpen: action.payload.modalOpen\n      };\n    case actionTypes.SET_EDITING:\n      return {\n        ...state,\n        isEditing: action.payload.isEditing,\n        appItem: action.payload.appItem\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { formReducer, mainReducer } from \"./reducers\";\r\n\r\nconst reducer = combineReducers({\r\n  form: formReducer,\r\n  main: mainReducer\r\n});\r\n\r\nlet middleware = compose(applyMiddleware(thunk, logger));\r\nconst store = createStore(reducer, middleware);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport Header from \"./components/header\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport \"./style/style.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport Alert from \"react-s-alert\";\r\nimport \"react-s-alert/dist/s-alert-default.css\";\r\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\r\n\r\nexport interface AppLocation {\r\n  lng: number;\r\n  lat: number;\r\n  address: string;\r\n}\r\nexport interface AppItem {\r\n  id?: string;\r\n  appName: string;\r\n  appColor: string;\r\n  appImage: string;\r\n  appDescription: string;\r\n  appLocation: AppLocation;\r\n  appCategories: boolean;\r\n  appGPS: boolean;\r\n}\r\nexport interface IProps {\r\n  isLogged: boolean;\r\n  currentUser: firebase.User;\r\n  getUser: Function;\r\n  modalOpen: boolean;\r\n  toggleModal: Function;\r\n  apps: Object[];\r\n  isEditing: boolean;\r\n  setEditing: Function;\r\n  appItem?: AppItem;\r\n  setValues: Function;\r\n}\r\nclass App extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Dashboard />\r\n        <Alert stack={{ limit: 3 }} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}